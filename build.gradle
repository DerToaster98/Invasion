buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

////// remove this section after getting everything to work
sourceSets {
    main {
        java {
            srcDir 'src'
            exclude '**/invasion/entity/monster/EntityIMBird.java'
            exclude '**/invasion/entity/monster/EntityIMBurrower.java'
            exclude '**/invasion/entity/monster/EntityIMFlying.java'
            exclude '**/invasion/entity/monster/EntityIMGiantBird.java'
            exclude '**/invasion/entity/monster/EntityIMGuardian.java'
            exclude '**/invasion/entity/monster/EntityIMMob2.java'
            exclude '**/invasion/entity/monster/EntityIMSkeleton.java'
            exclude '**/invasion/entity/monster/EntityIMSpider.java'
            exclude '**/invasion/entity/monster/EntityIMThrower.java'
            exclude '**/invasion/entity/monster/EntityIMZombiePigman.java'
            //exclude '**/invasion/entity/monster/ImpEntity.java'
            exclude '**/invasion/entity/monster/InvadingZombieEntity.java'
            exclude '**/invasion/entity/monster/MoulderingCreeperEntity.java'
            exclude '**/invasion/entity/monster/PigEngyEntity.java'
            exclude '**/invasion/entity/ai/**'
            exclude '**/invasion/entity/ally/**'
            exclude '**/invasion/entity/projectile/**'
            exclude '**/invasion/entity/block/**'
            exclude '**/invasion/entity/EntityIMLiving.java'
            exclude '**/invasion/entity/EntityIMSpawnProxy.java'
            exclude '**/invasion/entity/ICanBuild.java'
            exclude '**/invasion/entity/ICanDig.java'
            exclude '**/invasion/entity/INavigation.java'
            exclude '**/invasion/entity/INavigationFlying.java'
            exclude '**/invasion/entity/IPathSource.java'
            exclude '**/invasion/entity/ITerrainBuild.java'
            exclude '**/invasion/entity/ITerrainDig.java'
            exclude '**/invasion/entity/ITerrainModify.java'
            exclude '**/invasion/entity/ModifyBlockEntry.java'
            exclude '**/invasion/entity/MoveState.java'
            exclude '**/invasion/entity/TerrainBuilder.java'
            exclude '**/invasion/entity/TerrainDigger.java'
            exclude '**/invasion/entity/TerrainModifier.java'




            exclude '**/invasion/world/**'
            exclude '**/invasion/village/**'
            exclude '**/invasion/structure/**'

            exclude '**/invasion/client/render/animation/**'
            exclude '**/invasion/client/render/layer/**'
            exclude '**/invasion/client/render/AnimationRegistry.java'
            exclude '**/invasion/client/render/BoltRenderer.java'
            exclude '**/invasion/client/render/BoulderRenderer.java'
            exclude '**/invasion/client/render/Render*.java'
            exclude '**/invasion/client/render/CloakedSkeletonRenderer.java'
            exclude '**/invasion/client/render/ThrowerRenderer.java'
            exclude '**/invasion/client/render/MoulderingCreeperRenderer.java'
            //exclude '**/invasion/client/render/ImpRenderer.java'
            exclude '**/invasion/client/render/DogRenderer.java'
            exclude '**/invasion/client/render/PigEngyRenderer.java'
            exclude '**/invasion/client/render/model/Model*.java'
            //exclude '**/invasion/client/render/model/ImpModel.java'
            exclude '**/invasion/client/render/model/ThrowerModel.java'
            exclude '**/invasion/client/render/model/BoulderModel.java'





            exclude '**/invasion/TerrainDataLayer.java'
            //exclude '**/invasion/nexus/**'
            exclude '**/invasion/IPathfindable.java'
            exclude '**/invasion/util/spawneggs/**'
            exclude '**/invasion/util/config/**'
            exclude '**/invasion/util/VersionChecker.java'
            exclude '**/invasion/nexus/WaveSpawner.java'
            exclude '**/invasion/nexus/EntityPattern.java'
            exclude '**/invasion/nexus/WaveBuilder.java'
            exclude '**/invasion/nexus/WaveEntry.java'
            //exclude '**/invasion/nexus/SpawnPointContainer.java'
            //exclude '**/invasion/nexus/SpawnPoint.java'
            exclude '**/invasion/nexus/MobBuilder.java'
            exclude '**/invasion/nexus/Invasion.java'
            exclude '**/invasion/nexus/Wave.java'
            exclude '**/invasion/nexus/EntityPattern.java'



            exclude '**/invasion/item/trap/**'
            exclude '**/invasion/item/DebugWandItem.java'
            //exclude '**/invasion/item/ProbeItem.java'
            //exclude '**/invasion/item/SearingBowItem.java'
            //exclude '**/invasion/item/StrangeBoneItem.java'




        }
    }
}
/////

version = '1.0'
group = 'invasion' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'invasion'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20200602-1.15.1'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.15.2-31.2.0'

    // You may put jars on which you depend on in ./libs or you may define them like so..
    // compile "some.group:artifact:version:classifier"
    // compile "some.group:artifact:version"

    // Real examples
    // compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    // compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // The 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    // provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // These dependencies get remapped to your current MCP mappings
    // deobf 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "examplemod",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
